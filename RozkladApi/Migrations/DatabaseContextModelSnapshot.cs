// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RozkladApi.Models;

#nullable disable

namespace RozkladApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("RozkladApi.Models.BusLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LineNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BusLines");
                });

            modelBuilder.Entity("RozkladApi.Models.BusLineStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BusDepartureStopId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BusLineId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BusStopId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("TravelTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BusDepartureStopId");

                    b.HasIndex("BusLineId");

                    b.HasIndex("BusStopId");

                    b.ToTable("BusLineStops");
                });

            modelBuilder.Entity("RozkladApi.Models.BusStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RozkladApi.Models.BusLine", b =>
                {
                    b.HasOne("User", null)
                        .WithMany("UserBusLines")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("RozkladApi.Models.BusLineStop", b =>
                {
                    b.HasOne("RozkladApi.Models.BusStop", "BusDepartureStop")
                        .WithMany()
                        .HasForeignKey("BusDepartureStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RozkladApi.Models.BusLine", "BusLine")
                        .WithMany("LineStops")
                        .HasForeignKey("BusLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RozkladApi.Models.BusStop", "BusStop")
                        .WithMany()
                        .HasForeignKey("BusStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusDepartureStop");

                    b.Navigation("BusLine");

                    b.Navigation("BusStop");
                });

            modelBuilder.Entity("RozkladApi.Models.BusLine", b =>
                {
                    b.Navigation("LineStops");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("UserBusLines");
                });
#pragma warning restore 612, 618
        }
    }
}
